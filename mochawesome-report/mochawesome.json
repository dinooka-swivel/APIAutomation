{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-21T07:47:49.732Z",
    "end": "2022-07-21T07:47:52.272Z",
    "duration": 2540,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dc4e81ca-9267-47c2-a3e7-bf7b0f04dfb9",
      "title": "",
      "fullFile": "F:\\VS code - projects\\webdriverio\\APIAutomation\\test\\index.js",
      "file": "\\test\\index.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f2c4eee7-1252-4777-bdd1-7f3ae11594fb",
          "title": "Airports",
          "fullFile": "F:\\VS code - projects\\webdriverio\\APIAutomation\\test\\index.js",
          "file": "\\test\\index.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test_01_Get All Airports",
              "fullTitle": "Airports Test_01_Get All Airports",
              "timedOut": false,
              "duration": 669,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('airports');\n        //console.log(res.body.data);\n        console.log(res.status);\n        await expect(res.status).equal(200);\n        await expect(res.body).to.not.be.empty;",
              "err": {},
              "uuid": "37f18c69-8707-47c7-a9ab-680897300fef",
              "parentUUID": "f2c4eee7-1252-4777-bdd1-7f3ae11594fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test_02_Get 1 Airports",
              "fullTitle": "Airports Test_02_Get 1 Airports",
              "timedOut": false,
              "duration": 434,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('airports/PFJ');\n        console.log(res.body.data);\n        console.log(res.status);\n        await expect(res.status).equal(200);\n        await expect(res.body).to.not.be.empty;",
              "err": {},
              "uuid": "457f4259-eff1-42bc-b5f2-45d59673e265",
              "parentUUID": "f2c4eee7-1252-4777-bdd1-7f3ae11594fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test_03_POST distance",
              "fullTitle": "Airports Test_03_POST distance",
              "timedOut": false,
              "duration": 991,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = {\n            \"from\": \"KIX\",\n            \"to\": \"NRT\"\n        }\n        const res = await request.post('airports/distance').send(data);\n        console.log(res.body.data);\n        console.log(res.status);\n        await expect(res.status).equal(200);\n        await expect(res.body).to.not.be.empty;",
              "err": {},
              "uuid": "efd4c945-ed69-4636-a0c2-69161ef64478",
              "parentUUID": "f2c4eee7-1252-4777-bdd1-7f3ae11594fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test_04_POST create users",
              "fullTitle": "Airports Test_04_POST create users",
              "timedOut": false,
              "duration": 432,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const name = chance.name();\n        // const email = chance.email({domain: \"gmail.com\"})\n        const data = {\n            \"name\": chance.name(),\n            \"email\": chance.email({domain: \"gmail.com\"}),\n            \"gender\": \"male\",\n            \"status\": \"active\"\n        }\n        const res = await request2.post('users').set('Authorization','Bearer 1eaa7c6e1d432291b2a004e343c654ff3b37724a2cca3f81c8d4d997bd9d9187').send(data);\n        console.log(res.body.data);\n        console.log(res.status);\n        await expect(res.status).equal(201);\n        await expect(res.body).to.not.be.empty;",
              "err": {},
              "uuid": "4606ea05-4d4f-4382-86f9-ad32e320f208",
              "parentUUID": "f2c4eee7-1252-4777-bdd1-7f3ae11594fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37f18c69-8707-47c7-a9ab-680897300fef",
            "457f4259-eff1-42bc-b5f2-45d59673e265",
            "efd4c945-ed69-4636-a0c2-69161ef64478",
            "4606ea05-4d4f-4382-86f9-ad32e320f208"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2526,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}